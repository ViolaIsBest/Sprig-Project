/*
@title: getting_started
@tags: ['beginner', 'tutorial']
@addedOn: 2022-07-26
@author: leo, edits: samliu, belle, kara

Check the tutorial in the bottom right, the run button is in the top right.
Make sure to remix this tutorial if you want to save your progress!
*/

// define the sprites in our game
const player = "p";
const box = "b";
const goal = "g";
const wall = "w";
const enemy = "e";
const move = tune`
100.67114093959732,
100.67114093959732: C4-100.67114093959732,
100.67114093959732: A4-100.67114093959732 + B4-100.67114093959732,
100.67114093959732: B4-100.67114093959732 + C5-100.67114093959732,
100.67114093959732: C5-100.67114093959732 + D5-100.67114093959732,
2718.1208053691275`;
const push = tune`
137.61467889908258,
137.61467889908258: C4~137.61467889908258,
137.61467889908258: D4~137.61467889908258,
137.61467889908258: E4~137.61467889908258,
137.61467889908258: G4~137.61467889908258,
137.61467889908258: F4~137.61467889908258,
137.61467889908258: A4~137.61467889908258,
137.61467889908258: G4~137.61467889908258,
137.61467889908258: C5~137.61467889908258,
137.61467889908258: B4~137.61467889908258,
137.61467889908258: C5~137.61467889908258,
137.61467889908258: A4~137.61467889908258,
137.61467889908258: G4~137.61467889908258,
137.61467889908258: E4~137.61467889908258,
137.61467889908258: F4~137.61467889908258,
137.61467889908258: D4~137.61467889908258,
137.61467889908258: C4~137.61467889908258 + E4-137.61467889908258,
137.61467889908258: D4~137.61467889908258 + F4-137.61467889908258,
137.61467889908258: E4~137.61467889908258 + G4-137.61467889908258,
137.61467889908258: G4~137.61467889908258 + B4-137.61467889908258,
137.61467889908258: F4~137.61467889908258 + A4-137.61467889908258,
137.61467889908258: A4~137.61467889908258 + C5-137.61467889908258,
137.61467889908258: G4~137.61467889908258 + B4-137.61467889908258,
137.61467889908258: C5~137.61467889908258 + F5-137.61467889908258,
137.61467889908258: B4~137.61467889908258 + E5-137.61467889908258,
137.61467889908258: C5~137.61467889908258 + F5-137.61467889908258,
137.61467889908258: A4~137.61467889908258 + C5-137.61467889908258,
137.61467889908258: G4~137.61467889908258 + B4-137.61467889908258,
137.61467889908258: E4~137.61467889908258 + G4-137.61467889908258,
137.61467889908258: F4~137.61467889908258 + A4-137.61467889908258,
137.61467889908258: D4~137.61467889908258 + F4-137.61467889908258,
137.61467889908258: C4~137.61467889908258 + G4-137.61467889908258`;

// assign bitmap art to each sprite
setLegend(
  [ player, bitmap`
................
................
................
.......0........
.....00.000.....
....0.....00....
....0.0.0..0....
....0......0....
....0......0....
....00....0.....
......00000.....
......0...0.....
....000...000...
................
................
................`],
  [ box, bitmap`
................
................
................
...88888888888..
...8....8....8..
...8....8....8..
...8....8....8..
...8....8....8..
...88888888888..
...8....8....8..
...8....8....8..
...8....8....8..
...8....8....8..
...88888888888..
................
................`],
  [ goal, bitmap`
................
................
................
....444444......
...44....44.....
...4......4.....
...4.......4....
...4.......4....
...4.......4....
...44......4....
....4......4....
....44....44....
.....444444.....
................
................
................`],
  [ enemy, bitmap`
................
.....33333......
....3888883.....
...338888833....
..38088880883...
.3888888888883..
.38888888888883.
.38888888888883.
338888888888883.
388888000888883.
3CCCC0CCC0CCCC3.
33CCCCCCCCCCC33.
.33CCCCCCCCC333.
..33CCCCCCC33...
...333333333....
.....333333.....`],
  [ wall, bitmap`
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000`]
);

// create game levels
let level = 0; // this tracks the level we are on
const levels = [
  map`
..p.
.b.g
e.e.`,
  map`
p..
.b.
..g`,
  map`
p.wg
.bw.
....
....`,
  map`
p...
...b
...b
.bbg`,
  map`
...
.p.
...`,
  map`
p.w.
.bwg
....
..bg`
];

// set the map displayed to the current level
const currentLevel = levels[level];
setMap(currentLevel);

setSolids([ player, box, wall ]); // other sprites cannot go inside of these sprites

// allow certain sprites to push certain other sprites
setPushables({
  [player]: [box],
  [box] : [box]
});

// inputs for player movement control
onInput("s", () => {
  getFirst(player).y += 1; // positive y is downwards
  moveEnemies(1);
  playTune(move);
});

onInput("d", () => {
  getFirst(player).x += 1;
  moveEnemies(2);
  playTune(move);
});

onInput("w", () => {
  getFirst(player).y -= 1;
  moveEnemies(3);
  playTune(move);
});

onInput("a", () => {
  getFirst(player).x -= 1;
  moveEnemies(4);
  playTune(move);
});
// input to reset level
onInput("j", () => {
  const currentLevel = levels[level]; // get the original map of the level

  // make sure the level exists before we load it
  if (currentLevel !== undefined) {
    clearText("");
    setMap(currentLevel);
  }
});

// these get run after every input
afterInput(() => {
  // count the number of tiles with goal
  const targetNumber = tilesWith(goal).length;
  
  // count the number of tiles with goals and boxes
  const numberCovered = tilesWith(goal, box).length;

  //moves the enemies accordingly
  const allEnemies = getAll(enemy);

  
  // if the number of goals is the same as the number of goals covered
  // all goals are covered and we can go to the next level
  if (numberCovered === targetNumber) {
    // increase the current level number
    level = level + 1;

    const currentLevel = levels[level];

    // make sure the level exists and if so set the map
    // otherwise, we have finished the last level, there is no level
    // after the last level
    if (currentLevel !== undefined) {
      setMap(currentLevel);
    } else {
      playTune(push, 5);
      addText("you win!", { y: 4, color: color`3` });
    }
  }
});

function moveEnemies(number){
  const allEnemies = getAll(enemy);
  if(number === 1){
      allEnemies.forEach(enemy => {
        enemy.y += 1;
      });
  } else if (number === 2){
    allEnemies.forEach(enemy => {
      enemy.x += 1;
    });
  } else if (number === 3){
    allEnemies.forEach(enemy => {
      enemy.y -= 1;
    });
  } else if (number === 4){
    allEnemies.forEach(enemy => {
      enemy.x -= 1;
    });
  }
}
